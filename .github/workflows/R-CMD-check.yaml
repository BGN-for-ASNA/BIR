name: R-CMD-check

on:
  push:
  pull_request:

jobs R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (R ${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # This is the crucial step that fixes the errors.
      # It installs all R packages needed for the check to run:
      #  1. Your package's dependencies from DESCRIPTION (like reticulate).
      #  2. The rcmdcheck package itself.
      # This prepares the environment for the check.
      - name: Install R Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::rcmdcheck
            any::remotes

      # The check process will now run. When it tests your package's installation
      # and examples, your .onLoad function will be triggered, which will then
      # handle the installation of all necessary Python packages.
      - name: Check R Package
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}