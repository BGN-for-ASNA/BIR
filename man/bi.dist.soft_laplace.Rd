% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/soft_laplace.R
\name{bi.dist.soft_laplace}
\alias{bi.dist.soft_laplace}
\title{Samples from a Soft Laplace distribution.}
\usage{
bi.dist.soft_laplace(
  loc,
  scale,
  validate_args = py_none(),
  name = "x",
  obs = py_none(),
  mask = py_none(),
  sample = FALSE,
  seed = 0,
  shape = c(),
  event = 0,
  create_obj = FALSE
)
}
\arguments{
\item{loc}{Location parameter.}

\item{scale}{Scale parameter.}

\item{mask}{An optional boolean vector to mask observations.}

\item{shape}{A numeric vector specifying the shape. When \code{sample=FALSE} (model building), this is used with `.expand(shape)` to set the distribution's batch shape. When \code{sample=TRUE} (direct sampling), this is used as `sample_shape` to draw a raw JAX array of the given shape.}

\item{event}{The number of batch dimensions to reinterpret as event dimensions (used in model building).}

\item{create_obj}{Logical; If `TRUE`, returns the raw BI distribution object instead of creating a sample site.}
}
\value{
- When \code{sample=FALSE}, a BI Soft Laplace distribution object (for model building).

 - When \code{sample=TRUE}, a JAX array of samples drawn from the Soft Laplace distribution (for direct sampling).

 - When \code{create_obj=TRUE}, the raw BI distribution object (for advanced use cases).
}
\description{
This distribution is a smooth approximation of a Laplace distribution,
characterized by its log-convex density. It offers Laplace-like tails
while being infinitely differentiable, making it suitable for HMC and
Laplace approximation.

\deqn{f(x) = \log(2 / \pi) - \log(scale) - log_{add exp}((x - loc) / scale, -(x - loc) / scale)}
}
\examples{
\donttest{
library(BI)
m=importBI(platform='cpu')
bi.dist.soft_laplace(loc = 0, scale = 2, sample = TRUE)
}
}
