% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/negative_binomial_logits.R
\name{bi.dist.negative_binomial_logits}
\alias{bi.dist.negative_binomial_logits}
\title{Samples from a Negative Binomial Logits distribution.}
\usage{
bi.dist.negative_binomial_logits(
  total_count,
  logits,
  validate_args = py_none(),
  name = "x",
  obs = py_none(),
  mask = py_none(),
  sample = FALSE,
  seed = 0,
  shape = c(),
  event = 0,
  create_obj = FALSE
)
}
\arguments{
\item{total_count}{A numeric vector, matrix, or array representing the parameter
controlling the shape of the distribution. Represents the total number of trials.}

\item{logits}{A numeric vector, matrix, or array representing the log-odds parameter.
Related to the probability of success.}

\item{mask}{A logical vector, matrix, or array. Optional boolean array to mask observations.}

\item{shape}{A numeric vector. A multi-purpose argument for shaping. When `sample=False`
(model building), this is used with `.expand(shape)` to set the distribution's batch shape.
When `sample=True` (direct sampling), this is used as `sample_shape` to draw a raw JAX
array of the given shape.}

\item{event}{An integer representing the number of batch dimensions to reinterpret as event
dimensions (used in model building).}

\item{create_obj}{A logical value. If `TRUE`, returns the raw BI distribution object
instead of creating a sample site. This is essential for building complex distributions
like `MixtureSameFamily`.}
}
\value{
- When \code{sample=FALSE}, a BI Negative Binomial Logits distribution object (for model building).

 - When \code{sample=TRUE}, a JAX array of samples drawn from the Negative Binomial Logits distribution (for direct sampling).

 - When \code{create_obj=TRUE}, the raw BI distribution object (for advanced use cases).
}
\description{
The Negative Binomial Logits  distribution is a generalization of the Negative Binomial
distribution where the parameter 'r' (number of successes) is expressed as a function
of a logit parameter. This allows for more flexible modeling of count data.
}
\examples{
\donttest{
library(BI)
m=importBI(platform='cpu')
bi.dist.negative_binomial_logits(logits =  c(0.2, 0.3, 0.5), total_count = 10, sample = TRUE)
}
}
\seealso{
this is a wrapper from \url{https://num.pyro.ai/en/stable/distributions.html#negativebinomiallogits}
}
