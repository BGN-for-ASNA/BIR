% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binomial.R
\name{bi.dist.binomial}
\alias{bi.dist.binomial}
\title{Samples from a Binomial distribution.}
\usage{
bi.dist.binomial(
  total_count = 1,
  probs = py_none(),
  logits = py_none(),
  validate_args = py_none(),
  name = "x",
  obs = py_none(),
  mask = py_none(),
  sample = FALSE,
  seed = 0,
  shape = c(),
  event = 0,
  create_obj = FALSE
)
}
\arguments{
\item{total_count}{(int): The number of trials *n*.}

\item{probs}{(numeric vector, optional): The probability of success *p* for each trial. Must be between 0 and 1.}

\item{logits}{(numeric vector, optional): The log-odds of success for each trial.}

\item{validate_args}{Logical: Whether to validate parameter values.  Defaults to `reticulate::py_none()`.}

\item{name}{A character string representing the name of the random variable
within a model. This is used to uniquely identify the variable. Defaults to 'x'.}

\item{obs}{A numeric vector or array of observed values. If provided, the
random variable is conditioned on these values. If `NULL`, the variable is
treated as a latent (unobserved) variable. Defaults to `NULL`.}

\item{mask}{(numeric vector of booleans, optional): Optional boolean array to mask observations.}

\item{sample}{A logical value that controls the function's behavior. If `TRUE`,
the function will directly draw samples from the distribution. If `FALSE`,
it will create a random variable within a model. Defaults to `FALSE`.}

\item{seed}{An integer used to set the random seed for reproducibility when
`sample = TRUE`. This argument has no effect when `sample = FALSE`, as
randomness is handled by the model's inference engine. Defaults to 0.}

\item{shape}{(numeric vector): A multi-purpose argument for shaping. When `sample=False` (model building), this is used with `.expand(shape)` to set the distribution's batch shape. When `sample=True` (direct sampling), this is used as `sample_shape` to draw a raw JAX array of the given shape.}

\item{event}{(int): The number of batch dimensions to reinterpret as event dimensions (used in model building).}

\item{create_obj}{(logical, optional): If `TRUE`, returns the raw BI distribution object instead of creating a sample site. This is essential for building complex distributions like `MixtureSameFamily`.}
}
\value{
- When \code{sample=FALSE}, a BI Binomial distribution object (for model building).

 - When \code{sample=TRUE}, a JAX array of samples drawn from the Binomial distribution (for direct sampling).

 - When \code{create_obj=TRUE}, the raw BI distribution object (for advanced use cases).
}
\description{
The Binomial distribution models the number of successes in a sequence of independent Bernoulli trials.
It represents the probability of obtaining exactly *k* successes in *n* trials, where each trial has a probability *p* of success.

\deqn{P(X = k) = \binom{n}{k} p^k (1-p)^{n-k}}
}
\examples{
\donttest{
library(BayesianInference)
m=importBI(platform='cpu')
bi.dist.binomial(probs = c(0.5,0.5), sample = TRUE)
bi.dist.binomial(logits = 1, sample = TRUE)
}
}
