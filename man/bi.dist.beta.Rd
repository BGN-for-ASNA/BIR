% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/beta.R
\name{bi.dist.beta}
\alias{bi.dist.beta}
\title{Beta distribution wrapper.}
\usage{
bi.dist.beta(
  concentration1,
  concentration0,
  validate_args = py_none(),
  name = "x",
  obs = py_none(),
  mask = py_none(),
  sample = FALSE,
  seed = 0,
  shape = c(),
  event = 0,
  create_obj = FALSE
)
}
\arguments{
\item{concentration1}{<class 'inspect._empty'>}

\item{concentration0}{<class 'inspect._empty'>}

\item{validate_args}{None}

\item{mask}{(jnp.ndarray, bool): Optional boolean array to mask observations. This is passed to the `infer={'obs_mask': ...}` argument of `numpyro.sample`.}

\item{shape}{(tuple): A multi-purpose argument for shaping. - When sample=False (model building), this is used with `.expand(shape)` to set the distribution's batch shape. - When sample=True (direct sampling), this is used as `sample_shape` to draw a raw JAX array of the given shape.}

\item{event}{(int): The number of batch dimensions to reinterpret as event dimensions (used in model building).}

\item{create_obj}{(bool): If True, returns the raw NumPyro distribution object instead of creating a sample site. This is essential for building complex distributions like `MixtureSameFamily`.}
}
\description{
#' ```{latex}
\[
f(x) = \frac{x^{\alpha - 1} (1 - x)^{\beta - 1}}{B(\alpha, \beta)}
\]
```
}
\examples{
library(BI)
m=importBI(platform='cpu')
bi.dist.beta(concentration1 = 0, concentration0 = 1, sample = TRUE)
}
