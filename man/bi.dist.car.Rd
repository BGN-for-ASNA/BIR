% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/car.R
\name{bi.dist.car}
\alias{bi.dist.car}
\title{CAR distribution wrapper.}
\usage{
bi.dist.car(
  loc,
  correlation,
  conditional_precision,
  adj_matrix,
  is_sparse = FALSE,
  validate_args = py_none(),
  name = "x",
  obs = py_none(),
  mask = py_none(),
  sample = FALSE,
  seed = 0,
  shape = c(),
  event = 0,
  create_obj = FALSE
)
}
\arguments{
\item{loc}{<class 'inspect._empty'>}

\item{correlation}{<class 'inspect._empty'>}

\item{conditional_precision}{<class 'inspect._empty'>}

\item{adj_matrix}{<class 'inspect._empty'>}

\item{is_sparse}{False}

\item{validate_args}{None}

\item{mask}{(jnp.ndarray, bool): Optional boolean array to mask observations. This is passed to the `infer={'obs_mask': ...}` argument of `numpyro.sample`.}

\item{shape}{(tuple): A multi-purpose argument for shaping. - When sample=False (model building), this is used with `.expand(shape)` to set the distribution's batch shape. - When sample=True (direct sampling), this is used as `sample_shape` to draw a raw JAX array of the given shape.}

\item{event}{(int): The number of batch dimensions to reinterpret as event dimensions (used in model building).}

\item{create_obj}{(bool): If True, returns the raw NumPyro distribution object instead of creating a sample site. This is essential for building complex distributions like `MixtureSameFamily`.}
}
\description{
CAR distribution wrapper.
}
\examples{
library(BI)
m=importBI(platform='cpu')
bi.dist.car(loc = 0,correlation = 0.5, conditional_precision = 0.1, adj_matrix = 2, sample = TRUE)
}
