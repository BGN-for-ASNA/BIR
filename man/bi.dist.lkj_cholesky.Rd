% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lkj_cholesky.R
\name{bi.dist.lkj_cholesky}
\alias{bi.dist.lkj_cholesky}
\title{LKJ Cholesky Distribution}
\usage{
bi.dist.lkj_cholesky(
  dimension,
  concentration = 1,
  sample_method = "onion",
  validate_args = py_none(),
  name = "x",
  obs = py_none(),
  mask = py_none(),
  sample = FALSE,
  seed = 0,
  shape = c(),
  event = 0,
  create_obj = FALSE
)
}
\arguments{
\item{dimension}{Numeric for the dimensions of the LKJ Cholesky matrix.}

\item{concentration}{Numeric. A parameter controlling the concentration of the distribution
around the identity matrix. Higher values indicate greater concentration.
Must be greater than 1.}

\item{sample_method}{onion}

\item{validate_args}{None}

\item{mask}{Logical vector; Optional boolean array to mask observations.}

\item{shape}{Numeric vector; A multi-purpose argument for shaping. When \code{sample=FALSE} (model building),
this is used with `.expand(shape)` to set the distribution's batch shape.
When \code{sample=TRUE} (direct sampling), this is used as `sample_shape` to draw a raw JAX array
of the given shape.}

\item{event}{Numeric; The number of batch dimensions to reinterpret as event dimensions (used in model building).}

\item{create_obj}{Logical; If TRUE, returns the raw BI distribution object instead of creating a sample
site. This is essential for building complex distributions like `MixtureSameFamily`.}
}
\value{
- When \code{sample=FALSE}: A BI LKJ Cholesky distribution object (for model building).

   - When \code{sample=TRUE}: A JAX array of samples drawn from the LKJ Cholesky distribution (for direct sampling).

   - When \code{create_obj=TRUE}: The raw BI distribution object (for advanced use cases).
}
\description{
The LKJ Cholesky distribution is a family of distributions
on symmetric matrices, often used as a prior for the Cholesky decomposition of a
symmetric matrix. It is particularly useful in Bayesian inference for models with
covariance structure.
}
\examples{
\donttest{
library(BI)
m <- importBI(platform='cpu')
bi.dist.lkj_cholesky(dimension = 2, concentration = 1., sample = TRUE)
}

}
